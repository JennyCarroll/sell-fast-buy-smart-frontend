// To use these variables, paste @import "sassPartial"; at the top of your scss file

//to include a mixin to your class, add in @include mixinName();

$main-font: 'Nunito Sans', sans-serif;
$secondary-font: 'Plus Jakarta Sans', sans-serif;

//use less spacing and less line height for larger fonts
@mixin large-font() {
font-family: $secondary-font;
letter-spacing: -1px;
line-height: 100%;
}

//use large line height and greater letter spacing for small fonts
@mixin small-font() {
  letter-spacing: 0.5px;
  line-height: 140%;
}

@mixin logo() {
  font-family: $secondary-font;
  letter-spacing: -3px;
  line-height: 100%;
}

//top margin to drop content below navbar
$margin-top: 130px;

// colors
$darkest: hsl(228, 19%, 5%);
$dark: hsl(213, 24%, 16%);
$light: hsl(210, 2%, 78%);
$lightest:	hsl(0, 0%, 95%);
$colourLight: hsl(176, 96%, 69%);
$colourDark: hsl(177, 40%, 45%);

//create a variable with multiple values (a list)
$scheme-light: $lightest, $dark;
$scheme-dark: $dark, $light;
$scheme-nav-light: $dark, $light;
$scheme-nav-dark: $darkest, $lightest;

//color scheme mixin
@mixin color-scheme($bg, $text) {
  background-color: $bg;
  color: $text;
}

/* this mixin makes all of the images the same size without stretching them DO NOT CHANGE*/
@mixin image-size(){
  max-width: 100%;
  height: auto;
  display: block;
  margin: 0 auto;
  border-radius: 4px;
  // width:  20vw;
  // height: 40vh;
  // border-radius: 4px;
  // background-Repeat: no-repeat;
  // background-Position: center;
  // background-Size: cover;
  // position: relative;
}

/* this mixin makes all of the featured images the same size without stretching them DO NOT CHANGE*/
@mixin featuredImageSize(){
  background-Repeat: no-repeat;
  background-Position: center;
  background-Size: cover;
  position: relative;
  width:  10vw;
  height: 20vh;
  border-radius: 4px;
}

/* this mixin makes all of the small images in itemDetail the same size without stretching them DO NOT CHANGE*/
@mixin thumbNail(){
  float: left;
  width:  6vw;
  height: 10vh;
  object-fit: cover;
  border-radius: 4px;
}

@mixin bid-price-on-hover(){
  opacity: 0.8;
  position: absolute;
  margin-left: 20px;
  width: 8vw;
  height: 5vh;
  display: none;
  align-items: center;
  justify-content: center;
  background-Color: black;
  color: white;
  padding: 10px;
  border-Radius: 5px;
  transform: translate(-10%, -100%);
}

.light {
  //when passing in a list as arguments use three dots
  @include color-scheme($scheme-light...)
}

.dark {
  @include color-scheme($scheme-dark...)
}

.light .nav {
  @include color-scheme($scheme-nav-light...)
}

.dark .nav {
  @include color-scheme($scheme-nav-dark...)
}


@mixin titleContainer() {
  //create layout for the component using css grid
  // display: grid;
  //if we specify columns, but not rows, it assumes there can be more than one row.
  //create two columns
  // grid-template-columns: 33% 66%;
  display: flex;
  // flex-direction: row;
  margin-top: 4em;
  margin-left: 4em;
  margin-right: 4em;
  width: 100%;
  justify-content: space-between;
}

//style the contents of the title div using flexbox
@mixin title() {
  @include small-font();
  display: flex;
  align-items: left;
  flex-direction: row;
  margin-top: 1em;
  margin-bottom: 1em;
}

//style the contents of the horizontal rule div using flexbox
@mixin hr() {
  // display: flex;
  // align-items: left;
  // flex-direction: row;
  margin-right:10em;
  margin-left: 1em;
  margin-top: 1em;
  margin-bottom: 1em;
  display: flex;
  width: 70%;
  align-items: center;
  // justify-content: right;
  // float: right;
}